/* This file is generated by glib-genmarshal, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */
#ifndef __XMI_MARSHAL_H__
#define __XMI_MARSHAL_H__

#include <glib-object.h>

G_BEGIN_DECLS

/* VOID:POINTER (xmi_marshal.list:1) */
#define xmi_VOID__POINTER	g_cclosure_marshal_VOID__POINTER

/* VOID:STRING (xmi_marshal.list:2) */
#define xmi_VOID__STRING	g_cclosure_marshal_VOID__STRING

/* VOID:BOOLEAN,STRING (xmi_marshal.list:3) */
extern
void xmi_VOID__BOOLEAN_STRING (GClosure     *closure,
                               GValue       *return_value,
                               guint         n_param_values,
                               const GValue *param_values,
                               gpointer      invocation_hint,
                               gpointer      marshal_data);

/* VOID:INT,STRING (xmi_marshal.list:4) */
extern
void xmi_VOID__INT_STRING (GClosure     *closure,
                           GValue       *return_value,
                           guint         n_param_values,
                           const GValue *param_values,
                           gpointer      invocation_hint,
                           gpointer      marshal_data);

/* VOID:INT,DOUBLE (xmi_marshal.list:5) */
extern
void xmi_VOID__INT_DOUBLE (GClosure     *closure,
                           GValue       *return_value,
                           guint         n_param_values,
                           const GValue *param_values,
                           gpointer      invocation_hint,
                           gpointer      marshal_data);

/* VOID:BOOLEAN,BOOLEAN (xmi_marshal.list:6) */
extern
void xmi_VOID__BOOLEAN_BOOLEAN (GClosure     *closure,
                                GValue       *return_value,
                                guint         n_param_values,
                                const GValue *param_values,
                                gpointer      invocation_hint,
                                gpointer      marshal_data);

/* VOID:BOOLEAN,BOOLEAN,BOOLEAN (xmi_marshal.list:7) */
extern
void xmi_VOID__BOOLEAN_BOOLEAN_BOOLEAN (GClosure     *closure,
                                        GValue       *return_value,
                                        guint         n_param_values,
                                        const GValue *param_values,
                                        gpointer      invocation_hint,
                                        gpointer      marshal_data);

/* VOID:BOOLEAN,BOOLEAN,STRING,STRING,BOOLEAN (xmi_marshal.list:8) */
extern
void xmi_VOID__BOOLEAN_BOOLEAN_STRING_STRING_BOOLEAN (GClosure     *closure,
                                                      GValue       *return_value,
                                                      guint         n_param_values,
                                                      const GValue *param_values,
                                                      gpointer      invocation_hint,
                                                      gpointer      marshal_data);

/* VOID:ENUM,DOUBLE (xmi_marshal.list:9) */
extern
void xmi_VOID__ENUM_DOUBLE (GClosure     *closure,
                            GValue       *return_value,
                            guint         n_param_values,
                            const GValue *param_values,
                            gpointer      invocation_hint,
                            gpointer      marshal_data);

/* VOID:ENUM,STRING (xmi_marshal.list:10) */
extern
void xmi_VOID__ENUM_STRING (GClosure     *closure,
                            GValue       *return_value,
                            guint         n_param_values,
                            const GValue *param_values,
                            gpointer      invocation_hint,
                            gpointer      marshal_data);


G_END_DECLS

#endif /* __XMI_MARSHAL_H__ */
